###
# This Section listens on port 80 for your domain and rewrites the request
# to HTTPS for us
###

server {
    listen portnumber;
    server_name  domain www.domain;

    if ($bad_bot) {
        return 403;
    }

    access_log /log/nginx/filename.gunicorn_proxy_access.log main;
    error_log  /log/nginx/filename.gunicorn_proxy_error.log warn;
    # Log Location. Can be anywhere. Make sure the nginx user defined in /etc/nginx/nginx.conf has r/w permissions

    ###
    # This is the juicey part of the config file, handing off relevant data to
    # our back-end app running on port 3000
    # Nothing should need to be changed here, unless port 3000 is not the port
    # you're using.
    # Furthermore, if you're using a socket to serve your app (PHP comes to
    # mind), you can define a unix:.sock location here as well
    ###

    # if ($host !~* ^(domain\.com|www\.domain\.com)$) {
    #     return 444;
    # }

    # Allow Lets Encrypt Domain Validation Program
    location ^~ /.well-known/acme-challenge/ {
        allow all;
        root crontab_folder;
    }

    # Block dot file (.htaccess .htpasswd .svn .git .env and so on.)
    location ~ /\. {
        deny all;
    }

    # Block (log file, binary, certificate, shell script, sql dump file) access.
    location ~* \.(log|binary|pem|enc|crt|conf|cnf|sql|sh|key|yml|lock)$ {
        deny all;
    }

    # Block access
    location ~* (composer\.json|composer\.lock|composer\.phar|contributing\.md|license\.txt|readme\.rst|readme\.md|readme\.txt|copyright|artisan|gulpfile\.js|package\.json|phpunit\.xml|access_log|error_log|gruntfile\.js)$ {
        deny all;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        log_not_found off;
        access_log off;
    }

    location / {
        proxy_pass http://proxyurl:proxyport;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        # proxy_redirect http:// https://;
    }
}
