[uwsgi]
project = django_sample
username = root

#uid = root
#gid =
#base =/www/django_sample/django_sample

# Django-related settings
# the base directory (full path)
chdir = /www/django_sample

# Django's wsgi file
module = django_sample.wsgi:application


# python path
#home            = /home/linku/.pyenv/versions/LinkU/

# apt-get install uwsgi uwsgi-plugin-python3
# after installed above command, setting below value
#plugin = python38

# the virtualenv (full path)
#virtualenv = /home/linku/.pyenv/versions/LinkU/

#django argument
#env = DJANGO_SETTINGS_MODULE=conf.settings

# process-related settings
# tell uWSGI to start a master node to serve requests
master = true

# application name
#callable=app

# Enable hot reload!
py-autoreload = 1

# maximum number of worker processes
processes = 4
#threads = 2

# the socket (use the full path to be safe
#socket= /home/linku/LinkU/linku_backend/linku.sock

# Nginx to handle actual client connections, which will then pass requests to uWSGI. 
socket = :8000

socket-timeout = 3000
http-timeout = 3000

ignore-sigpipe = true
ignore-write-errors = true
disable-write-exception = true

# ... with appropriate permissions - may be needed
chown-socket = www-data:www-data
chmod-socket    = 666

# clean the socket when processes stop
# clean up the socket when the process stops by adding the vacuum option:
vacuum = true

# use die-on-term to communicate with Ubuntu versions using Upstart initialisations: see:
# http://uwsgi-docs.readthedocs.io/en/latest/Upstart.html?highlight=die%20on%20term
# https://www.digitalocean.com/community/tutorials/how-to-set-up-uwsgi-and-nginx-to-serve-python-apps-on-ubuntu-14-04
die-on-term = true

# log path on daemonize the process
daemonize = /log/uwsgi/%(project)-daemonize-uwsgi.log

# process pid
#pidfile=/tmp/linku_backend.pid

# newrelic settings
enable-threads = true
single-interpreter = true
lazy-apps = true

logto = /log/uwsgi/%(project)-uwsgi.log

# place timestamps into log
log-date = true
